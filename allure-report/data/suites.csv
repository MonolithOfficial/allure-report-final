"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Tue May 04 11:06:59 AZT 2021","Tue May 04 11:06:59 AZT 2021","394","test_suite","Groups","Tests","Tests","GenerateTokenTest","GenerateTokenTest","Description: Generate Token main test, 3 iterations with validations"
"passed","Tue May 04 11:07:26 AZT 2021","Tue May 04 11:07:39 AZT 2021","13550","test_suite","Groups","Tests","Tests","getUserLoginAddBook","getUserLoginAddBook","login user, add book, validate book with title"
"passed","Tue May 04 11:06:58 AZT 2021","Tue May 04 11:06:59 AZT 2021","457","test_suite","Groups","Tests","Tests","NegativeScenario","NegativeScenario","Tests user web service with dataprovider"
"passed","Tue May 04 11:06:55 AZT 2021","Tue May 04 11:06:58 AZT 2021","2710","test_suite","Groups","Tests","Tests","GenerateTokenTest","GenerateTokenTest","Description: Generate Token main test, 3 iterations with validations"
"passed","Tue May 04 11:07:25 AZT 2021","Tue May 04 11:07:26 AZT 2021","321","test_suite","Groups","Tests","Tests","authorizedUser","User is now authorized","Check user authorization"
"passed","Tue May 04 11:07:25 AZT 2021","Tue May 04 11:07:25 AZT 2021","332","test_suite","Groups","Tests","Tests","generateToken","Generate Token","Authorize the user"
"passed","Tue May 04 11:06:55 AZT 2021","Tue May 04 11:06:58 AZT 2021","2717","test_suite","Groups","Tests","Tests","NegativeScenario","NegativeScenario","Tests user web service with dataprovider"
"passed","Tue May 04 11:06:59 AZT 2021","Tue May 04 11:06:59 AZT 2021","316","test_suite","Groups","Tests","Tests","getBooksForUser","Add an user","Get books for current user"
"passed","Tue May 04 11:07:39 AZT 2021","Tue May 04 11:07:54 AZT 2021","15403","test_suite","Groups","Tests","Tests","userDeleteAndValidate","userDeleteAndValidate","deletes user and validates"
"passed","Tue May 04 11:06:59 AZT 2021","Tue May 04 11:07:29 AZT 2021","29557","test_suite","Groups","Tests","Tests","booksListSizeByPublisher","booksListSizeByPublisher","Test case booksListSizeByPublisher to filter UI and API elements validate them and compare.whether the number of publications matches"
"passed","Tue May 04 11:07:24 AZT 2021","Tue May 04 11:07:25 AZT 2021","403","test_suite","Groups","Tests","Tests","unauthorizedUser","User is not authorized","Check user authorization"
"passed","Tue May 04 11:06:55 AZT 2021","Tue May 04 11:07:39 AZT 2021","43609","test_suite","Groups","Tests","Tests","GetBooksDataFromUIAndAPITest","GetBooksDataFromUIAndAPITest","Get books data from ui and api ,validate title,author and publisher."
"passed","Tue May 04 11:06:59 AZT 2021","Tue May 04 11:06:59 AZT 2021","348","test_suite","Groups","Tests","Tests","NegativeScenario","NegativeScenario","Tests user web service with dataprovider"
"passed","Tue May 04 11:06:58 AZT 2021","Tue May 04 11:06:59 AZT 2021","389","test_suite","Groups","Tests","Tests","GenerateTokenTest","GenerateTokenTest","Description: Generate Token main test, 3 iterations with validations"
"passed","Tue May 04 11:06:59 AZT 2021","Tue May 04 11:07:24 AZT 2021","25156","test_suite","Groups","Tests","Tests","GOBTest","GOBTest","This test moves to book details page, grabs the isbn needed to access the query dynamically and then proceeds to graball the information in UI and Query. at the end of the execution it compared the two data sets in two different ways1st, by moving the Query information to the BookAPI POJO class and comparing its values to the Book POJO class that has UI Data stored in it, and 2nd, by directly accessing Query information with fluent and comparing it with Book POJO class UI data"
